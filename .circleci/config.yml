version: 2.1
orbs:
  gradle: circleci/gradle@2.2.0
  android: circleci/android@1.0

jobs:
  build-ui-test:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - android/create-avd:
          avd-name: testDevice
          system-image: system-images;android-30;google_apis;x86
          install: true
      - android/start-emulator:
          avd-name: testDevice
          no-window: true
          restore-gradle-cache-prefix: v1a
      - android/run-tests:
          test-command: ./gradlew :testing:connectedCheck
      - android/save-gradle-cache:
          cache-prefix: v1a
  build-test-sonar:
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Wrapper
          command: ./gradlew wrapper
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lib:testDebugUnitTest jacocoTestReport sonarqube
      - run:
          name: Assemble sample release build
          command: ./gradlew sample:assembleRelease
      - run:
          name: Assemble sample-voice release build
          command: ./gradlew sample-voice:assembleRelease
      - run:
          name: Assemble advanced-sample release build
          command: ./gradlew advanced-sample:assembleRelease
      - store_test_results:
          path: lib/build/test-results/testDebugUnitTest
      - store_artifacts:
          path: sample/build/outputs/apk/release
      - store_artifacts:
          path: sample-voice/build/outputs/apk/release
      - store_artifacts:
          path: advanced-sample/build/outputs/apk/release
  deploy-to-sonatype:
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Wrapper
          command: ./gradlew wrapper
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}
      - run:
          name: Inject Maven signing key
          command: |
            echo $GPG_SIGNING_KEY \
            | awk 'NR == 1 { print "SIGNING_KEY=" } 1' ORS='\\n' \
            >> gradle.properties
      - run:
          name: Publish to Maven
          command: ./gradlew assemble publish
workflows:
  build-test-sonar:
    jobs:
      - build-ui-test:
          name: Build, run UI tests
      - build-test-sonar:
          name: Build, run tests, upload to sonar
          context: SonarCloud
  build-test-sonar-publish:
    jobs:
      - build-test-sonar:
          context: SonarCloud
      - deploy-to-sonatype:
          name: Build, run tests, sonar and push to maven staging
          requires:
            - build-test-sonar
          filters:
            branches:
              only:
                - dev
