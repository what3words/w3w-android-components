plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version "$dokka_version"
}

def libVersion = findProperty('LIBRARY_VERSION') ? findProperty('LIBRARY_VERSION') : "1.0-debug"

apply from: 'maven-push.gradle'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion 33

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField("String", "VERSION_NAME", "\"${libVersion}\"")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        multipleVariants {
            withSourcesJar()
            withJavadocJar()
            allVariants()
        }
    }

    tasks.dokkaGfm.configure {
        suppressObviousFunctions.set(true)
        suppressInheritedMembers.set(true)
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose_compiler_version"
    }
    namespace 'com.what3words.components'
}

dependencies {
    api "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation "com.google.android.material:material:$google_material_version"

    // kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"


    // what3words wrapper
    api "com.what3words:w3w-android-wrapper:$what3words_android_wrapper_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "com.google.guava:guava:$guava_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "com.airbnb.android:lottie:$lottie_version"

    // compose
    implementation "androidx.compose.foundation:foundation:$compose_version"
    compileOnly "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout_version"
    compileOnly "androidx.compose.ui:ui:$compose_version"

    // testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "com.google.truth:truth:$google_truth_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation  "org.json:json:$json_version"
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}